package com.accessProject.footballManager.controllers;

import java.util.Date;

import javax.validation.Valid;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.accessProject.footballManager.models.CreateFootballTeamRequestModel;
import com.accessProject.footballManager.models.CreateFootballTeamResponseModel;
import com.accessProject.footballManager.models.ListTeamsResponseModel;
import com.accessProject.footballManager.services.FootballManagerService;
import com.accessProject.footballManager.shared.FootballTeamDto;

@RestController
@RequestMapping("/footballManager")
public class FootballController {

	@Autowired
	FootballManagerService footballManagerService;
	
	@GetMapping("/team/details")
	public ResponseEntity<CreateFootballTeamResponseModel> getTeam(String teamName) {
		return (ResponseEntity<CreateFootballTeamResponseModel>) footballManagerService.getTeam(teamName);
	}
	
	@GetMapping("/teams")
	public ResponseEntity<ListTeamsResponseModel> getAllTeams(String teamName) {
		ModelMapper modelMapper = new ModelMapper();
		
		List<FootballTeamDto> teams = footballManagerService.getAllTeams();
		CreateFootballTeamResponseModel returnValue = modelMapper.map(teamSearched, CreateFootballTeamResponseModel.class);
		return new ResponseEntity<ListTeamsResponseModel>(returnValue,HttpStatus.ACCEPTED);
	}
	
	@PostMapping
	public ResponseEntity<CreateFootballTeamResponseModel> createFootballTeam(@Valid @RequestBody CreateFootballTeamRequestModel teamDetails) {
		//for test
		teamDetails.setFechaCreacion(new Date());
		ModelMapper modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
		
		FootballTeamDto teamDto = modelMapper.map(teamDetails, FootballTeamDto.class);
		FootballTeamDto teamCreated = footballManagerService.createTeam(teamDto);
		CreateFootballTeamResponseModel returnValue = modelMapper.map(teamCreated, CreateFootballTeamResponseModel.class);
		
		return new ResponseEntity<CreateFootballTeamResponseModel>(returnValue,HttpStatus.CREATED);
	}
}
